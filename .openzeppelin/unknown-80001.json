{
  "manifestVersion": "3.1",
  "impls": {
    "080cd8943dd74de21183579ed55c7217a204326342a23880f6b076d301868d51": {
      "address": "0xBc8476fD9C38f0D81a63B287eC159f4bD2958Be5",
      "txHash": "0x21f1b8433220732ad159bf72fc52701667904175fd434121d5d14463fae6335a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:312"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)7846_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "EIP712Base",
            "label": "domainSeperator",
            "type": "t_bytes32",
            "src": "metaTransaction/common/EIP712Base.sol:18"
          },
          {
            "contract": "NetworkAgnostic",
            "label": "nonces",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "metaTransaction/common/NetworkAgnostic.sol:19"
          },
          {
            "contract": "ConfigVariables",
            "label": "firstWithdrawIndex",
            "type": "t_uint256",
            "src": "matic/config/ConfigVariables.sol:8"
          },
          {
            "contract": "ConfigVariables",
            "label": "GFrewards",
            "type": "t_uint256",
            "src": "matic/config/ConfigVariables.sol:9"
          },
          {
            "contract": "ConfigVariables",
            "label": "welcomeBTYTokens",
            "type": "t_uint256",
            "src": "matic/config/ConfigVariables.sol:10"
          },
          {
            "contract": "ConfigVariables",
            "label": "owner",
            "type": "t_address_payable",
            "src": "matic/config/ConfigVariables.sol:11"
          },
          {
            "contract": "ConfigVariables",
            "label": "GFindex",
            "type": "t_uint256",
            "src": "matic/config/ConfigVariables.sol:13"
          },
          {
            "contract": "BET",
            "label": "publicContract",
            "type": "t_address",
            "src": "matic/tokens/BET.sol:8"
          },
          {
            "contract": "BET",
            "label": "btyContract",
            "type": "t_address",
            "src": "matic/tokens/BET.sol:9"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)7846_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)7846_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)9708_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)9708_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)9443_storage"
              }
            ]
          },
          "t_struct(Set)9443_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "e959719403e01bc532b6e1f5c8c9d5a40bb697a152e920e354866df122498555": {
      "address": "0xf30194141A119Df00bf5ce736658B9FB2798362F",
      "txHash": "0xced61a72408db50485049abea81c44ef91e3c44af15d7f92a70f036a80fba290",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:312"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)7846_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "EIP712Base",
            "label": "domainSeperator",
            "type": "t_bytes32",
            "src": "metaTransaction/common/EIP712Base.sol:18"
          },
          {
            "contract": "NetworkAgnostic",
            "label": "nonces",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "metaTransaction/common/NetworkAgnostic.sol:19"
          },
          {
            "contract": "BTY",
            "label": "betToken",
            "type": "t_contract(BET)7270",
            "src": "matic/tokens/BTY.sol:8"
          },
          {
            "contract": "BTY",
            "label": "owner",
            "type": "t_address",
            "src": "matic/tokens/BTY.sol:9"
          },
          {
            "contract": "BTY",
            "label": "childChainManagerProxy",
            "type": "t_address",
            "src": "matic/tokens/BTY.sol:11"
          },
          {
            "contract": "BTY",
            "label": "wallets",
            "type": "t_mapping(t_address,t_bool)",
            "src": "matic/tokens/BTY.sol:12"
          }
        ],
        "types": {
          "t_contract(BET)7270": {
            "label": "contract BET"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)7846_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)7846_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)9708_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)9708_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)9443_storage"
              }
            ]
          },
          "t_struct(Set)9443_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "0eddbff92ea0a680c5d8cde5eed7289d9c4d4121064a0ddda1820b01299dfe49": {
      "address": "0xdE84CC7A04E6669878A9d9CCD15D196B93f52500",
      "txHash": "0x03f0f13947842b3cfcf3be710a65868f1deb3006c3e3776e34ce7d16605ace56",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "PrivateEvents",
            "label": "events",
            "type": "t_mapping(t_int256,t_struct(EventData)6833_storage)",
            "src": "matic/events/PrivateEvents.sol:10"
          },
          {
            "contract": "PrivateEvents",
            "label": "owner",
            "type": "t_address",
            "src": "matic/events/PrivateEvents.sol:11"
          }
        ],
        "types": {
          "t_mapping(t_int256,t_struct(EventData)6833_storage)": {
            "label": "mapping(int256 => struct PrivStruct.EventData)"
          },
          "t_int256": {
            "label": "int256"
          },
          "t_struct(EventData)6833_storage": {
            "label": "struct PrivStruct.EventData",
            "members": [
              {
                "label": "id",
                "type": "t_int256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "correctAnswer",
                "type": "t_uint8"
              },
              {
                "label": "player",
                "type": "t_mapping(t_uint256,t_array(t_struct(Player)6809_storage)dyn_storage)"
              },
              {
                "label": "allPlayers",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "questionQuantity",
                "type": "t_uint8"
              },
              {
                "label": "host",
                "type": "t_address"
              },
              {
                "label": "correctAnswerSetter",
                "type": "t_address"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint256,t_array(t_struct(Player)6809_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct PrivStruct.Player[])"
          },
          "t_array(t_struct(Player)6809_storage)dyn_storage": {
            "label": "struct PrivStruct.Player[]"
          },
          "t_struct(Player)6809_storage": {
            "label": "struct PrivStruct.Player",
            "members": [
              {
                "label": "players",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "cc10ae227738981a92667c4c8a05cf950402df529c43a3eb2a7e27ce8102e457": {
      "address": "0xC3AA622051fdD739D93a4Bbf99ed3fed04cbaF7A",
      "txHash": "0x8066d19d78da55143ffb3fc01367ff7a9a24f2237b3abce9b40da78969f4056b",
      "layout": {
        "storage": [
          {
            "contract": "PubStruct",
            "label": "events",
            "type": "t_mapping(t_int256,t_struct(EventData)6927_storage)",
            "src": "matic/struct/PubStruct.sol:33"
          },
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "PublicEvents",
            "label": "minBet",
            "type": "t_uint256",
            "src": "matic/events/PublicEvents/PublicEvents.sol:22"
          },
          {
            "contract": "PublicEvents",
            "label": "betToken",
            "type": "t_contract(BET)7270",
            "src": "matic/events/PublicEvents/PublicEvents.sol:23"
          },
          {
            "contract": "PublicEvents",
            "label": "btyToken",
            "type": "t_contract(BTY)7478",
            "src": "matic/events/PublicEvents/PublicEvents.sol:24"
          },
          {
            "contract": "PublicEvents",
            "label": "mpData",
            "type": "t_contract(MPStruct)6804",
            "src": "matic/events/PublicEvents/PublicEvents.sol:25"
          },
          {
            "contract": "PublicEvents",
            "label": "mpContract",
            "type": "t_contract(MiddlePayment)5184",
            "src": "matic/events/PublicEvents/PublicEvents.sol:26"
          },
          {
            "contract": "PublicEvents",
            "label": "owner",
            "type": "t_address",
            "src": "matic/events/PublicEvents/PublicEvents.sol:27"
          },
          {
            "contract": "PublicEvents",
            "label": "MPContract",
            "type": "t_address",
            "src": "matic/events/PublicEvents/PublicEvents.sol:28"
          },
          {
            "contract": "PublicEvents",
            "label": "PPContract",
            "type": "t_address",
            "src": "matic/events/PublicEvents/PublicEvents.sol:29"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(BET)7270": {
            "label": "contract BET"
          },
          "t_contract(BTY)7478": {
            "label": "contract BTY"
          },
          "t_contract(MPStruct)6804": {
            "label": "contract MPStruct"
          },
          "t_contract(MiddlePayment)5184": {
            "label": "contract MiddlePayment"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_int256,t_struct(EventData)6927_storage)": {
            "label": "mapping(int256 => struct PubStruct.EventData)"
          },
          "t_int256": {
            "label": "int256"
          },
          "t_struct(EventData)6927_storage": {
            "label": "struct PubStruct.EventData",
            "members": [
              {
                "label": "id",
                "type": "t_int256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "questAmount",
                "type": "t_uint256"
              },
              {
                "label": "players",
                "type": "t_mapping(t_uint256,t_array(t_struct(Player)6883_storage)dyn_storage)"
              },
              {
                "label": "allPlayers",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "activePlayers",
                "type": "t_uint256"
              },
              {
                "label": "expert",
                "type": "t_mapping(t_uint256,t_array(t_struct(Expert)6888_storage)dyn_storage)"
              },
              {
                "label": "activeExperts",
                "type": "t_uint256"
              },
              {
                "label": "amountExperts",
                "type": "t_uint256"
              },
              {
                "label": "calculateExperts",
                "type": "t_bool"
              },
              {
                "label": "host",
                "type": "t_address_payable"
              },
              {
                "label": "advisor",
                "type": "t_address_payable"
              },
              {
                "label": "pool",
                "type": "t_uint256"
              },
              {
                "label": "premiumAmount",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_array(t_struct(Player)6883_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct PubStruct.Player[])"
          },
          "t_array(t_struct(Player)6883_storage)dyn_storage": {
            "label": "struct PubStruct.Player[]"
          },
          "t_struct(Player)6883_storage": {
            "label": "struct PubStruct.Player",
            "members": [
              {
                "label": "player",
                "type": "t_address_payable"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_array(t_struct(Expert)6888_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct PubStruct.Expert[])"
          },
          "t_array(t_struct(Expert)6888_storage)dyn_storage": {
            "label": "struct PubStruct.Expert[]"
          },
          "t_struct(Expert)6888_storage": {
            "label": "struct PubStruct.Expert",
            "members": [
              {
                "label": "expert",
                "type": "t_address_payable"
              },
              {
                "label": "reputation",
                "type": "t_int256"
              }
            ]
          },
          "t_address_payable": {
            "label": "address payable"
          }
        }
      }
    },
    "eb3c928a1e46b93d140dfea7c1f3526296d0c7b3bbd20dd9a5e64539d32caae5": {
      "address": "0x9EB4214f1F19e47692A60467926a53dFc1E482A0",
      "txHash": "0x6d8402e903ab258eb0175f2622e3d803d686cd866e24e74ec93ec1f1693a88f8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "MPConfig",
            "label": "owner",
            "type": "t_address",
            "src": "matic/config/MPConfig.sol:7"
          },
          {
            "contract": "MPConfig",
            "label": "comMarketFundWallet",
            "type": "t_address_payable",
            "src": "matic/config/MPConfig.sol:8"
          },
          {
            "contract": "MPConfig",
            "label": "moderatorsFundWallet",
            "type": "t_address_payable",
            "src": "matic/config/MPConfig.sol:9"
          },
          {
            "contract": "MPConfig",
            "label": "developFundPerc",
            "type": "t_uint256",
            "src": "matic/config/MPConfig.sol:10"
          },
          {
            "contract": "MPConfig",
            "label": "developFundPercPremim",
            "type": "t_uint256",
            "src": "matic/config/MPConfig.sol:11"
          },
          {
            "contract": "MPConfig",
            "label": "comMarketFundPerc",
            "type": "t_uint256",
            "src": "matic/config/MPConfig.sol:12"
          },
          {
            "contract": "MPConfig",
            "label": "moderatorsFundPerc",
            "type": "t_uint256",
            "src": "matic/config/MPConfig.sol:13"
          },
          {
            "contract": "MPConfig",
            "label": "hostPercMint",
            "type": "t_uint256",
            "src": "matic/config/MPConfig.sol:15"
          },
          {
            "contract": "MPConfig",
            "label": "hostPerc",
            "type": "t_uint256",
            "src": "matic/config/MPConfig.sol:16"
          },
          {
            "contract": "MPConfig",
            "label": "extraHostPerc",
            "type": "t_uint256",
            "src": "matic/config/MPConfig.sol:17"
          },
          {
            "contract": "MPConfig",
            "label": "extraHostPercMint",
            "type": "t_uint256",
            "src": "matic/config/MPConfig.sol:18"
          },
          {
            "contract": "MPConfig",
            "label": "expertPercMint",
            "type": "t_uint256",
            "src": "matic/config/MPConfig.sol:20"
          },
          {
            "contract": "MPConfig",
            "label": "expertPerc",
            "type": "t_uint256",
            "src": "matic/config/MPConfig.sol:21"
          },
          {
            "contract": "MPConfig",
            "label": "expertExtraPerc",
            "type": "t_uint256",
            "src": "matic/config/MPConfig.sol:22"
          },
          {
            "contract": "MPConfig",
            "label": "expertPremiumPerc",
            "type": "t_uint256",
            "src": "matic/config/MPConfig.sol:23"
          },
          {
            "contract": "MPConfig",
            "label": "advisorPercMint",
            "type": "t_uint256",
            "src": "matic/config/MPConfig.sol:25"
          },
          {
            "contract": "MPConfig",
            "label": "advisorPepc",
            "type": "t_uint256",
            "src": "matic/config/MPConfig.sol:26"
          },
          {
            "contract": "MPStruct",
            "label": "ownerAddr",
            "type": "t_address",
            "src": "matic/struct/MPStruct.sol:7"
          },
          {
            "contract": "MPStruct",
            "label": "PEContract",
            "type": "t_address",
            "src": "matic/struct/MPStruct.sol:8"
          },
          {
            "contract": "MPStruct",
            "label": "PPContract",
            "type": "t_address",
            "src": "matic/struct/MPStruct.sol:9"
          },
          {
            "contract": "MPStruct",
            "label": "MPData",
            "type": "t_mapping(t_int256,t_struct(MiddlePaymentStruct)6668_storage)",
            "src": "matic/struct/MPStruct.sol:24"
          },
          {
            "contract": "MiddlePayment",
            "label": "eventsData",
            "type": "t_contract(PubStruct)7134",
            "src": "matic/events/PublicEvents/MiddlePayment.sol:10"
          },
          {
            "contract": "MiddlePayment",
            "label": "PublicAddr",
            "type": "t_contract(PublicEvents)6540",
            "src": "matic/events/PublicEvents/MiddlePayment.sol:11"
          },
          {
            "contract": "MiddlePayment",
            "label": "pubAddr",
            "type": "t_address",
            "src": "matic/events/PublicEvents/MiddlePayment.sol:12"
          }
        ],
        "types": {
          "t_contract(PubStruct)7134": {
            "label": "contract PubStruct"
          },
          "t_contract(PublicEvents)6540": {
            "label": "contract PublicEvents"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_int256,t_struct(MiddlePaymentStruct)6668_storage)": {
            "label": "mapping(int256 => struct MPStruct.MiddlePaymentStruct)"
          },
          "t_int256": {
            "label": "int256"
          },
          "t_struct(MiddlePaymentStruct)6668_storage": {
            "label": "struct MPStruct.MiddlePaymentStruct",
            "members": [
              {
                "label": "id",
                "type": "t_int256"
              },
              {
                "label": "correctAnswer",
                "type": "t_uint256"
              },
              {
                "label": "loserPool",
                "type": "t_uint256"
              },
              {
                "label": "tokenMinted",
                "type": "t_uint256"
              },
              {
                "label": "reverted",
                "type": "t_bool"
              },
              {
                "label": "eventFinish",
                "type": "t_bool"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address_payable": {
            "label": "address payable"
          }
        }
      }
    },
    "0cea243047e381b8e4514cd42c845e2cc1ef90b38cf8989f39bac4dcc5b0771b": {
      "address": "0x40b290717A3303B9e52C24E56a99aB061c8D99Ea",
      "txHash": "0x73c023744447d837ee3078f155d287dd942a8fd89c1b8f631ffec969591a7158",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "PPConfig",
            "label": "owner",
            "type": "t_address",
            "src": "matic/config/PPConfig.sol:7"
          },
          {
            "contract": "PPConfig",
            "label": "playersPersMint",
            "type": "t_uint256",
            "src": "matic/config/PPConfig.sol:9"
          },
          {
            "contract": "PPConfig",
            "label": "playersPers",
            "type": "t_uint256",
            "src": "matic/config/PPConfig.sol:10"
          },
          {
            "contract": "PPConfig",
            "label": "playersPersPremiun",
            "type": "t_uint256",
            "src": "matic/config/PPConfig.sol:11"
          },
          {
            "contract": "PPConfig",
            "label": "firstRefer",
            "type": "t_uint256",
            "src": "matic/config/PPConfig.sol:12"
          },
          {
            "contract": "PPConfig",
            "label": "secontRefer",
            "type": "t_uint256",
            "src": "matic/config/PPConfig.sol:13"
          },
          {
            "contract": "PPConfig",
            "label": "thirdRefer",
            "type": "t_uint256",
            "src": "matic/config/PPConfig.sol:14"
          },
          {
            "contract": "PPConfig",
            "label": "fakeAddr",
            "type": "t_address",
            "src": "matic/config/PPConfig.sol:15"
          },
          {
            "contract": "PlayerPayment",
            "label": "mpData",
            "type": "t_contract(MPStruct)6804",
            "src": "matic/events/PublicEvents/PlayerPayment.sol:13"
          },
          {
            "contract": "PlayerPayment",
            "label": "eventsData",
            "type": "t_contract(PubStruct)7134",
            "src": "matic/events/PublicEvents/PlayerPayment.sol:14"
          },
          {
            "contract": "PlayerPayment",
            "label": "PublicAddr",
            "type": "t_contract(PublicEvents)6540",
            "src": "matic/events/PublicEvents/PlayerPayment.sol:15"
          }
        ],
        "types": {
          "t_contract(MPStruct)6804": {
            "label": "contract MPStruct"
          },
          "t_contract(PubStruct)7134": {
            "label": "contract PubStruct"
          },
          "t_contract(PublicEvents)6540": {
            "label": "contract PublicEvents"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    }
  },
  "admin": {
    "address": "0x2cF6134c81388E8ac6652704924606F271B81646",
    "txHash": "0xf57eb5b184d698ef9bef2dc0c77fbd0df056ba244761b61b3ec43af65758ddcf"
  }
}
