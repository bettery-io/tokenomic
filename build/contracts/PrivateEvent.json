{
  "contractName": "PrivateEvent",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address payable",
          "name": "relayerAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "functionSignature",
          "type": "bytes"
        }
      ],
      "name": "MetaTransactionExecuted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "question_id",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "correctAnswer",
          "type": "uint8"
        }
      ],
      "name": "eventIsFinish",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "functionSignature",
          "type": "bytes"
        },
        {
          "internalType": "bytes32",
          "name": "sigR",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "sigS",
          "type": "bytes32"
        },
        {
          "internalType": "uint8",
          "name": "sigV",
          "type": "uint8"
        }
      ],
      "name": "executeMetaTransaction",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "getNonce",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_startTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_endTime",
          "type": "uint256"
        }
      ],
      "name": "timeAnswer",
      "outputs": [
        {
          "internalType": "int8",
          "name": "",
          "type": "int8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_endTime",
          "type": "uint256"
        }
      ],
      "name": "timeValidate",
      "outputs": [
        {
          "internalType": "int8",
          "name": "",
          "type": "int8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    },
    {
      "inputs": [
        {
          "internalType": "int256",
          "name": "_id",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "_startTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_endTime",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "_questionQuantity",
          "type": "uint8"
        },
        {
          "internalType": "address payable",
          "name": "_correctAnswerSetter",
          "type": "address"
        }
      ],
      "name": "createEvent",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int256",
          "name": "_id",
          "type": "int256"
        },
        {
          "internalType": "address payable",
          "name": "_correctAnswerSetter",
          "type": "address"
        }
      ],
      "name": "setRoleOfAdmin",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int256",
          "name": "_id",
          "type": "int256"
        },
        {
          "internalType": "uint8",
          "name": "_whichAnswer",
          "type": "uint8"
        }
      ],
      "name": "setAnswer",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int256",
          "name": "_id",
          "type": "int256"
        },
        {
          "internalType": "uint8",
          "name": "_correctAnswer",
          "type": "uint8"
        }
      ],
      "name": "setCorrectAnswer",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address payable\",\"name\":\"relayerAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"functionSignature\",\"type\":\"bytes\"}],\"name\":\"MetaTransactionExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"question_id\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"correctAnswer\",\"type\":\"uint8\"}],\"name\":\"eventIsFinish\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"_id\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"_startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"_questionQuantity\",\"type\":\"uint8\"},{\"internalType\":\"address payable\",\"name\":\"_correctAnswerSetter\",\"type\":\"address\"}],\"name\":\"createEvent\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"functionSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"sigR\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"sigS\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"sigV\",\"type\":\"uint8\"}],\"name\":\"executeMetaTransaction\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"_id\",\"type\":\"int256\"},{\"internalType\":\"uint8\",\"name\":\"_whichAnswer\",\"type\":\"uint8\"}],\"name\":\"setAnswer\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"_id\",\"type\":\"int256\"},{\"internalType\":\"uint8\",\"name\":\"_correctAnswer\",\"type\":\"uint8\"}],\"name\":\"setCorrectAnswer\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"_id\",\"type\":\"int256\"},{\"internalType\":\"address payable\",\"name\":\"_correctAnswerSetter\",\"type\":\"address\"}],\"name\":\"setRoleOfAdmin\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_endTime\",\"type\":\"uint256\"}],\"name\":\"timeAnswer\",\"outputs\":[{\"internalType\":\"int8\",\"name\":\"\",\"type\":\"int8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_endTime\",\"type\":\"uint256\"}],\"name\":\"timeValidate\",\"outputs\":[{\"internalType\":\"int8\",\"name\":\"\",\"type\":\"int8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/macbook/Documents/freelance/tokenominc/contracts/events/PrivateEvents.sol\":\"PrivateEvent\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/macbook/Documents/freelance/tokenominc/contracts/events/PrivateEvents.sol\":{\"keccak256\":\"0x4b6a72ae8c0c85e241da622081a830f01dc10b0d98f8b04f21ca458ca01deca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35513af0b2e96d76a762c3e8e4a414bc8f6ebcf476911f4c1ff15fac7c806f7f\",\"dweb:/ipfs/QmcfoeY1UAQ5rynQsbQkqxRpEfevt2HomrnMNLgRWxxW5x\"]},\"/Users/macbook/Documents/freelance/tokenominc/contracts/helpers/MetaTransactLib.sol\":{\"keccak256\":\"0x330fcb9da577478454d1c9e9bb1bb19c2b4b7e35e32cf537f2ea2d65efcac00a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92a0d2a6d055b6c2af9bdfeb1dcbfd0334fff33a008b28f3cf0e02226a5a9176\",\"dweb:/ipfs/QmZuyjrjJwjA1bUGuveUPrV2HmvQEBV8ZZAqC6CsfydNgM\"]},\"/Users/macbook/Documents/freelance/tokenominc/contracts/helpers/TimeValidation.sol\":{\"keccak256\":\"0x6b88b7d71086022426d2207f9a11f407616008d1299836472972f4b69441eb70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://14cfc5d604620dff4257dc8cada991e7a94dba1294a6463818242f1f0402dae6\",\"dweb:/ipfs/QmQUpRCpuNiLpvY2VamxJ7C54HucJCWtFVmDMFCaNZgbxM\"]},\"/Users/macbook/Documents/freelance/tokenominc/contracts/helpers/common/EIP712Base.sol\":{\"keccak256\":\"0xabf82690509d325f9b76b3c5167f426dd1eadbe4f69438c594aa4431b13958c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7290b6cf2808cadce199c1ad5c1ed027253fdf6f374e2a9d86a6918c74354b26\",\"dweb:/ipfs/QmTibYrjHPjBz26TduKHPyKxhSyTkg9z9oKeCaWNKhiAfe\"]},\"/Users/macbook/Documents/freelance/tokenominc/contracts/helpers/common/NetworkAgnostic.sol\":{\"keccak256\":\"0x4525fd0f773978cdacabc6d6b6acdcb35c06941cf87230c530c3775e0f17d373\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://54e95be23f317452361dd7b6a577e93acb9746801dad4a78d416567703a1d5c6\",\"dweb:/ipfs/QmUQ9efSBZqHXdzv96kVWc4rafrBYGmmoQAqzvfu8vhbBY\"]},\"/Users/macbook/Documents/freelance/tokenominc/contracts/struct/PrivStruct.sol\":{\"keccak256\":\"0x61fe524dcc7b558c1f2c1e06557d8b08d70e8f672a50746c4820cdba7fd43207\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://55ff73a85897931d40edf348963f3d0ae501ef8cfaba5a8c9aa5abe514ada2c9\",\"dweb:/ipfs/QmRMWUEA2LXAkEUhxkePKENtpeCjBMfrAQe9872tb1MSTQ\"]},\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x4fc155a2f7837603d69a13cfa481eb5e7f5e02cb77e2ec9edbac30986db37988\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0855147e38b5e36288a8df73b8da49132f14ec7abb19041b0c98872263643aaa\",\"dweb:/ipfs/QmSrSysyFUYQq7hbJaJXG7EyZW6ezDBzEJx3SABp6eiJSS\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c\",\"dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]},\"@openzeppelin/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0x1562cd9922fbf739edfb979f506809e2743789cbde3177515542161c3d04b164\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4580d57781513d98870d9738c7d39094336e0a70cdb90d68dad549c6ced466ec\",\"dweb:/ipfs/Qmf9YZzzRFuvMnav9dgmeRUpdYMMECiZX8w25sHWVbA18V\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106100f75760003560e01c806368c882d01161008a578063a217fddf11610059578063a217fddf14610634578063b2fba7e11461065f578063ca15c873146106ce578063d547741f1461071d576100fe565b806368c882d0146104cb5780639010d07c1461050657806391d14854146105755780639b09434d146105e6576100fe565b80632d0335ab116100c65780632d0335ab146103545780632f2ff15d146103b957806336568abe1461041457806354f6db741461046f576100fe565b80630c53c51c14610103578063246fe64714610278578063248a9ca3146102ca5780632a7100cc14610319576100fe565b366100fe57005b600080fd5b6101fd600480360360a081101561011957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561015657600080fd5b82018360208201111561016857600080fd5b8035906020019184600183028401116401000000008311171561018a57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019092919080359060200190929190803560ff169060200190929190505050610778565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561023d578082015181840152602081019050610222565b50505050905090810190601f16801561026a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561028457600080fd5b506102b16004803603602081101561029b57600080fd5b8101908080359060200190929190505050610b85565b604051808260000b815260200191505060405180910390f35b3480156102d657600080fd5b50610303600480360360208110156102ed57600080fd5b8101908080359060200190929190505050610ba3565b6040518082815260200191505060405180910390f35b6103526004803603604081101561032f57600080fd5b8101908080359060200190929190803560ff169060200190929190505050610bc2565b005b34801561036057600080fd5b506103a36004803603602081101561037757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d44565b6040518082815260200191505060405180910390f35b3480156103c557600080fd5b50610412600480360360408110156103dc57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d8d565b005b34801561042057600080fd5b5061046d6004803603604081101561043757600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e16565b005b34801561047b57600080fd5b506104b26004803603604081101561049257600080fd5b810190808035906020019092919080359060200190929190505050610eaf565b604051808260000b815260200191505060405180910390f35b610504600480360360408110156104e157600080fd5b8101908080359060200190929190803560ff169060200190929190505050610ee1565b005b34801561051257600080fd5b506105496004803603604081101561052957600080fd5b810190808035906020019092919080359060200190929190505050611130565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561058157600080fd5b506105ce6004803603604081101561059857600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611161565b60405180821515815260200191505060405180910390f35b610632600480360360408110156105fc57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611192565b005b34801561064057600080fd5b506106496112ac565b6040518082815260200191505060405180910390f35b6106cc600480360360a081101561067557600080fd5b81019080803590602001909291908035906020019092919080359060200190929190803560ff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506112b3565b005b3480156106da57600080fd5b50610707600480360360208110156106f157600080fd5b81019080803590602001909291905050506113eb565b6040518082815260200191505060405180910390f35b34801561072957600080fd5b506107766004803603604081101561074057600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611411565b005b606060006040518060600160405280600260008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481526020018873ffffffffffffffffffffffffffffffffffffffff1681526020018781525090506107fb878287878761149a565b610850576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180611ca76021913960400191505060405180910390fd5b6108a36001600260008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461154990919063ffffffff16565b600260008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f5845892132946850460bff5a0083f71031bc5bf9aadcd40f1de79423eac9b10b873388604051808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff16815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610982578082015181840152602081019050610967565b50505050905090810190601f1680156109af5780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a16000803073ffffffffffffffffffffffffffffffffffffffff16888a6040516020018083805190602001908083835b60208310610a1057805182526020820191506020810190506020830392506109ed565b6001836020036101000a0380198251168184511680821785525050505050509050018273ffffffffffffffffffffffffffffffffffffffff1660601b8152601401925050506040516020818303038152906040526040518082805190602001908083835b60208310610a975780518252602082019150602081019050602083039250610a74565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114610af9576040519150601f19603f3d011682016040523d82523d6000602084013e610afe565b606091505b509150915081610b76576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f46756e6374696f6e2063616c6c206e6f74207375636365737366756c0000000081525060200191505060405180910390fd5b80935050505095945050505050565b60008082420312610b995760009050610b9e565b600190505b919050565b6000806000838152602001908152602001600020600201549050919050565b6000610bfa60036000858152602001908152602001600020600101546003600086815260200190815260200160002060020154610eaf565b60000b14610c70576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f54696d65206973206e6f742076616c696400000000000000000000000000000081525060200191505060405180910390fd5b610c78611b77565b6040518060200160405280610c8b6115d1565b73ffffffffffffffffffffffffffffffffffffffff1681525090506003600084815260200190815260200160002060040160008360ff168152602001908152602001600020819080600181540180825580915050600190039060005260206000200160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505050565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610db360008084815260200190815260200160002060020154610dae6115d1565b611161565b610e08576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180611bc3602f913960400191505060405180910390fd5b610e128282611682565b5050565b610e1e6115d1565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610ea1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180611cc8602f913960400191505060405180910390fd5b610eab8282611715565b5050565b60008083420312610ed657600042830312610ecd5760009050610edb565b60029050610edb565b600190505b92915050565b600073ffffffffffffffffffffffffffffffffffffffff166003600084815260200190815260200160002060060160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461100d576003600083815260200190815260200160002060060160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610fa06115d1565b73ffffffffffffffffffffffffffffffffffffffff161461100c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180611bf26021913960400191505060405180910390fd5b5b600261104560036000858152602001908152602001600020600101546003600086815260200190815260200160002060020154610eaf565b60000b146110bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f54696d65206973206e6f742076616c696400000000000000000000000000000081525060200191505060405180910390fd5b806003600084815260200190815260200160002060030160006101000a81548160ff021916908360ff1602179055507ff5a70ce65e816e264ea92e606a76d4f13a670b9479aadd125199f7a3e42be5ff8282604051808381526020018260ff1681526020019250505060405180910390a15050565b6000611159826000808681526020019081526020016000206000016117a890919063ffffffff16565b905092915050565b600061118a826000808681526020019081526020016000206000016117c290919063ffffffff16565b905092915050565b6003600083815260200190815260200160002060050160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166111e76115d1565b73ffffffffffffffffffffffffffffffffffffffff1614611253576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180611c866021913960400191505060405180910390fd5b806003600084815260200190815260200160002060060160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6000801b81565b84600360008781526020019081526020016000206000018190555083600360008781526020019081526020016000206001018190555082600360008781526020019081526020016000206002018190555061130c6115d1565b6003600087815260200190815260200160002060050160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806003600087815260200190815260200160002060060160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550816003600087815260200190815260200160002060050160006101000a81548160ff021916908360ff1602179055505050505050565b600061140a6000808481526020019081526020016000206000016117f2565b9050919050565b611437600080848152602001908152602001600020600201546114326115d1565b611161565b61148c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526030815260200180611c566030913960400191505060405180910390fd5b6114968282611715565b5050565b600060016114af6114aa87611807565b611897565b83868660405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015611506573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614905095945050505050565b6000808284019050838110156115c7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b60003073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561167b57600080368080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509050600080369050905073ffffffffffffffffffffffffffffffffffffffff81830151169250505061167f565b3390505b90565b6116a9816000808581526020019081526020016000206000016118fe90919063ffffffff16565b15611711576116b66115d1565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b61173c8160008085815260200190815260200160002060000161192e90919063ffffffff16565b156117a4576117496115d1565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b60006117b7836000018361195e565b60001c905092915050565b60006117ea836000018373ffffffffffffffffffffffffffffffffffffffff1660001b6119e1565b905092915050565b600061180082600001611a04565b9050919050565b6000604051806080016040528060438152602001611c13604391398051906020012082600001518360200151846040015180519060200120604051602001808581526020018481526020018373ffffffffffffffffffffffffffffffffffffffff168152602001828152602001945050505050604051602081830303815290604052805190602001209050919050565b60006118a1611a15565b8260405160200180807f190100000000000000000000000000000000000000000000000000000000000081525060020183815260200182815260200192505050604051602081830303815290604052805190602001209050919050565b6000611926836000018373ffffffffffffffffffffffffffffffffffffffff1660001b611a1f565b905092915050565b6000611956836000018373ffffffffffffffffffffffffffffffffffffffff1660001b611a8f565b905092915050565b6000818360000180549050116119bf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180611ba16022913960400191505060405180910390fd5b8260000182815481106119ce57fe5b9060005260206000200154905092915050565b600080836001016000848152602001908152602001600020541415905092915050565b600081600001805490509050919050565b6000600154905090565b6000611a2b83836119e1565b611a84578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050611a89565b600090505b92915050565b60008083600101600084815260200190815260200160002054905060008114611b6b5760006001820390506000600186600001805490500390506000866000018281548110611ada57fe5b9060005260206000200154905080876000018481548110611af757fe5b9060005260206000200181905550600183018760010160008381526020019081526020016000208190555086600001805480611b2f57fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050611b71565b60009150505b92915050565b6040518060200160405280600073ffffffffffffffffffffffffffffffffffffffff168152509056fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e6473416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e744f6e6c792061646d696e2063616e2073657420636f727265637420616e737765724d6574615472616e73616374696f6e2875696e74323536206e6f6e63652c616464726573732066726f6d2c62797465732066756e6374696f6e5369676e617475726529416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b654f6e6c79206f776e65722063616e207365742061646d696e206f66206576656e745369676e657220616e64207369676e617475726520646f206e6f74206d61746368416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66a2646970667358221220a1e7489a2fbbd1fd7cffd2036fb344bf8ff98f9588599513b57b2a51670e7ac564736f6c63430007060033",
  "immutableReferences": {},
  "sourceMap": "246:1874:1:-:0;;;309:60;;;;;;;;;;274:151:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;364:1:1;396:5:3;403:8;413:9;1084:4:6;1090:7;1099;300:113:5;;;;;;;;;;;;;;;;;281:138;;;;;;702:4;686:22;;;;;;742:7;726:25;;;;;;769:8;803:4;618:204;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;595:237;;;;;;577:15;:255;;;;464:375;;;971:139:6;;;274:151:3;;;246:1874:1;;;;;;",
  "deployedSourceMap": "246:1874:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1116:1108:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;676:325:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;4282:112:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1293:330:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2632:105:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4644:223:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5818:205;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;96:574:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1629:489:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3965:136:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2950:137;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;983:304:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1727:49:11;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;494:479:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3255:125:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5101:226;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1116:1108:6;1311:12;1335:29;1367:148;;;;;;;;1404:6;:19;1411:11;1404:19;;;;;;;;;;;;;;;;1367:148;;;;1443:11;1367:148;;;;;;1487:17;1367:148;;;1335:180;;1547:45;1554:11;1567:6;1575:4;1581;1587;1547:6;:45::i;:::-;1526:125;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1737:26;1761:1;1737:6;:19;1744:11;1737:19;;;;;;;;;;;;;;;;:23;;:26;;;;:::i;:::-;1715:6;:19;1722:11;1715:19;;;;;;;;;;;;;;;:48;;;;1779:113;1816:11;1841:10;1865:17;1779:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2000:12;2014:23;2049:4;2041:18;;2090:17;2109:11;2073:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2041:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1999:132;;;;2149:7;2141:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2207:10;2200:17;;;;;1116:1108;;;;;;;:::o;676:325:4:-;737:4;795:1;782:8;764:15;:26;757:39;753:242;;875:1;868:8;;;;753:242;983:1;976:8;;676:325;;;;:::o;4282:112:11:-;4339:7;4365:6;:12;4372:4;4365:12;;;;;;;;;;;:22;;;4358:29;;4282:112;;;:::o;1293:330:1:-;1435:1;1377:54;1388:6;:11;1395:3;1388:11;;;;;;;;;;;:21;;;1411:6;:11;1418:3;1411:11;;;;;;;;;;;:19;;;1377:10;:54::i;:::-;:59;;;1369:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1468:35;;:::i;:::-;1521:36;;;;;;;;1544:12;:10;:12::i;:::-;1521:36;;;;;1513:44;;1567:6;:11;1574:3;1567:11;;;;;;;;;;;:23;;:37;1591:12;1567:37;;;;;;;;;;;;;1610:5;1567:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1293:330;;;:::o;2632:105:6:-;2685:13;2718:6;:12;2725:4;2718:12;;;;;;;;;;;;;;;;2710:20;;2632:105;;;:::o;4644:223:11:-;4727:45;4735:6;:12;4742:4;4735:12;;;;;;;;;;;:22;;;4759:12;:10;:12::i;:::-;4727:7;:45::i;:::-;4719:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4835:25;4846:4;4852:7;4835:10;:25::i;:::-;4644:223;;:::o;5818:205::-;5915:12;:10;:12::i;:::-;5904:23;;:7;:23;;;5896:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5990:26;6002:4;6008:7;5990:11;:26::i;:::-;5818:205;;:::o;96:574:4:-;199:4;263:1;248:10;230:15;:28;223:41;219:445;;322:1;302:15;291:8;:26;284:39;280:263;;413:1;406:8;;;;280:263;527:1;520:8;;;;219:445;652:1;645:8;;96:574;;;;;:::o;1629:489:1:-;1759:1;1716:45;;:6;:11;1723:3;1716:11;;;;;;;;;;;:31;;;;;;;;;;;;:45;;;1713:197;;1809:6;:11;1816:3;1809:11;;;;;;;;;;;:31;;;;;;;;;;;;1793:47;;:12;:10;:12::i;:::-;:47;;;1772:127;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1713:197;1986:1;1928:54;1939:6;:11;1946:3;1939:11;;;;;;;;;;;:21;;;1962:6;:11;1969:3;1962:11;;;;;;;;;;;:19;;;1928:10;:54::i;:::-;:59;;;1920:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2047:14;2019:6;:11;2026:3;2019:11;;;;;;;;;;;:25;;;:42;;;;;;;;;;;;;;;;;;2077:34;2091:3;2096:14;2077:34;;;;;;;;;;;;;;;;;;;;;;;;;;1629:489;;:::o;3965:136:11:-;4038:7;4064:30;4088:5;4064:6;:12;4071:4;4064:12;;;;;;;;;;;:20;;:23;;:30;;;;:::i;:::-;4057:37;;3965:136;;;;:::o;2950:137::-;3019:4;3042:38;3072:7;3042:6;:12;3049:4;3042:12;;;;;;;;;;;:20;;:29;;:38;;;;:::i;:::-;3035:45;;2950:137;;;;:::o;983:304:1:-;1141:6;:11;1148:3;1141:11;;;;;;;;;;;:16;;;;;;;;;;;;1125:32;;:12;:10;:12::i;:::-;:32;;;1104:112;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1260:20;1226:6;:11;1233:3;1226:11;;;;;;;;;;;:31;;;:54;;;;;;;;;;;;;;;;;;983:304;;:::o;1727:49:11:-;1772:4;1727:49;;;:::o;494:479:1:-;716:3;699:6;:11;706:3;699:11;;;;;;;;;;;:14;;:20;;;;753:10;729:6;:11;736:3;729:11;;;;;;;;;;;:21;;:34;;;;795:8;773:6;:11;780:3;773:11;;;;;;;;;;;:19;;:30;;;;832:12;:10;:12::i;:::-;813:6;:11;820:3;813:11;;;;;;;;;;;:16;;;:31;;;;;;;;;;;;;;;;;;888:20;854:6;:11;861:3;854:11;;;;;;;;;;;:31;;;:54;;;;;;;;;;;;;;;;;;949:17;918:6;:11;925:3;918:11;;;;;;;;;;;:28;;;:48;;;;;;;;;;;;;;;;;;494:479;;;;;:::o;3255:125:11:-;3318:7;3344:29;:6;:12;3351:4;3344:12;;;;;;;;;;;:20;;:27;:29::i;:::-;3337:36;;3255:125;;;:::o;5101:226::-;5185:45;5193:6;:12;5200:4;5193:12;;;;;;;;;;;:22;;;5217:12;:10;:12::i;:::-;5185:7;:45::i;:::-;5177:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5294:26;5306:4;5312:7;5294:11;:26::i;:::-;5101:226;;:::o;2743:390:6:-;2915:4;2972:154;2999:47;3018:27;3038:6;3018:19;:27::i;:::-;2999:18;:47::i;:::-;3064:4;3086;3108;2972:154;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2950:176;;:6;:176;;;2931:195;;2743:390;;;;;;;:::o;2690:175:12:-;2748:7;2767:9;2783:1;2779;:5;2767:17;;2807:1;2802;:6;;2794:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2857:1;2850:8;;;2690:175;;;;:::o;435:640:3:-;521:22;585:4;563:27;;:10;:27;;;559:487;;;606:18;627:8;;606:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;649:13;665:8;;:15;;649:31;;912:42;883:5;876;872:17;866:24;841:131;831:141;;703:283;;;;;1025:10;1016:19;;559:487;435:640;:::o;7025:184:11:-;7098:33;7123:7;7098:6;:12;7105:4;7098:12;;;;;;;;;;;:20;;:24;;:33;;;;:::i;:::-;7094:109;;;7179:12;:10;:12::i;:::-;7152:40;;7170:7;7152:40;;7164:4;7152:40;;;;;;;;;;7094:109;7025:184;;:::o;7215:188::-;7289:36;7317:7;7289:6;:12;7296:4;7289:12;;;;;;;;;;;:20;;:27;;:36;;;;:::i;:::-;7285:112;;;7373:12;:10;:12::i;:::-;7346:40;;7364:7;7346:40;;7358:4;7346:40;;;;;;;;;;7285:112;7215:188;;:::o;7677:156:17:-;7751:7;7801:22;7805:3;:10;;7817:5;7801:3;:22::i;:::-;7793:31;;7770:56;;7677:156;;;;:::o;6984:165::-;7064:4;7087:55;7097:3;:10;;7133:5;7117:23;;7109:32;;7087:9;:55::i;:::-;7080:62;;6984:165;;;;:::o;7230:115::-;7293:7;7319:19;7327:3;:10;;7319:7;:19::i;:::-;7312:26;;7230:115;;;:::o;2230:396:6:-;2337:7;329:98;;;;;;;;;;;;;;;;;310:123;;;;;;2485:6;:12;;;2519:6;:11;;;2562:6;:24;;;2552:35;;;;;;2406:199;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2379:240;;;;;;2360:259;;2230:396;;;:::o;1305:249:5:-;1401:7;1499:20;:18;:20::i;:::-;1521:11;1470:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1443:104;;;;;;1424:123;;1305:249;;;:::o;6429:150:17:-;6499:4;6522:50;6527:3;:10;;6563:5;6547:23;;6539:32;;6522:4;:50::i;:::-;6515:57;;6429:150;;;;:::o;6747:156::-;6820:4;6843:53;6851:3;:10;;6887:5;6871:23;;6863:32;;6843:7;:53::i;:::-;6836:60;;6747:156;;;;:::o;4452:201::-;4519:7;4567:5;4546:3;:11;;:18;;;;:26;4538:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4628:3;:11;;4640:5;4628:18;;;;;;;;;;;;;;;;4621:25;;4452:201;;;;:::o;3805:127::-;3878:4;3924:1;3901:3;:12;;:19;3914:5;3901:19;;;;;;;;;;;;:24;;3894:31;;3805:127;;;;:::o;4013:107::-;4069:7;4095:3;:11;;:18;;;;4088:25;;4013:107;;;:::o;845:100:5:-;897:7;923:15;;916:22;;845:100;:::o;1640:404:17:-;1703:4;1724:21;1734:3;1739:5;1724:9;:21::i;:::-;1719:319;;1761:3;:11;;1778:5;1761:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1941:3;:11;;:18;;;;1919:3;:12;;:19;1932:5;1919:19;;;;;;;;;;;:40;;;;1980:4;1973:11;;;;1719:319;2022:5;2015:12;;1640:404;;;;;:::o;2212:1512::-;2278:4;2394:18;2415:3;:12;;:19;2428:5;2415:19;;;;;;;;;;;;2394:40;;2463:1;2449:10;:15;2445:1273;;2806:21;2843:1;2830:10;:14;2806:38;;2858:17;2899:1;2878:3;:11;;:18;;;;:22;2858:42;;3140:17;3160:3;:11;;3172:9;3160:22;;;;;;;;;;;;;;;;3140:42;;3303:9;3274:3;:11;;3286:13;3274:26;;;;;;;;;;;;;;;:38;;;;3420:1;3404:13;:17;3378:3;:12;;:23;3391:9;3378:23;;;;;;;;;;;:43;;;;3527:3;:11;;:17;;;;;;;;;;;;;;;;;;;;;;;;3619:3;:12;;:19;3632:5;3619:19;;;;;;;;;;;3612:26;;;3660:4;3653:11;;;;;;;;2445:1273;3702:5;3695:12;;;2212:1512;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.4.22 <0.9.0;\n\nimport {MetaTransactLib} from \"../helpers/MetaTransactLib.sol\";\nimport {PrivStruct} from \"../struct/PrivStruct.sol\";\nimport {TimeValidation} from \"../helpers/TimeValidation.sol\";\n\ncontract PrivateEvent is MetaTransactLib, TimeValidation {\n    constructor() MetaTransactLib(\"Private_contract\", \"1\", 5) {}\n\n    event eventIsFinish(int256 question_id, uint8 correctAnswer);\n    mapping(int256 => PrivStruct.EventData) events;\n\n    function createEvent(\n        int256 _id,\n        uint256 _startTime,\n        uint256 _endTime,\n        uint8 _questionQuantity,\n        address payable _correctAnswerSetter\n    ) public payable {\n        events[_id].id = _id;\n        events[_id].startTime = _startTime;\n        events[_id].endTime = _endTime;\n        events[_id].host = _msgSender();\n        events[_id].correctAnswerSetter = _correctAnswerSetter;\n        events[_id].questionQuantity = _questionQuantity;\n    }\n\n        function setRoleOfAdmin(\n        int256 _id,\n        address payable _correctAnswerSetter\n    ) public payable {\n        require(\n            _msgSender() == events[_id].host,\n            \"Only owner can set admin of event\"\n        );\n        events[_id].correctAnswerSetter = _correctAnswerSetter;\n    }\n\n    function setAnswer(int256 _id, uint8 _whichAnswer) public payable {\n        require(timeAnswer(events[_id].startTime, events[_id].endTime) == 0, \"Time is not valid\");\n        PrivStruct.Participant memory parts;\n        parts = PrivStruct.Participant(_msgSender());\n        events[_id].participant[_whichAnswer].push(parts);\n    }\n\n    function setCorrectAnswer(int256 _id, uint8 _correctAnswer) public payable{\n        if(events[_id].correctAnswerSetter != address(0)){\n        require(\n            _msgSender() == events[_id].correctAnswerSetter,\n            \"Only admin can set correct answer\"\n        );\n        }\n\n        require(timeAnswer(events[_id].startTime, events[_id].endTime) == 2, \"Time is not valid\");\n        events[_id].correctAnswer = _correctAnswer;\n\n        emit eventIsFinish(_id, _correctAnswer);\n    }\n}",
  "sourcePath": "/Users/macbook/Documents/freelance/tokenominc/contracts/events/PrivateEvents.sol",
  "ast": {
    "absolutePath": "/Users/macbook/Documents/freelance/tokenominc/contracts/events/PrivateEvents.sol",
    "exportedSymbols": {
      "MetaTransactLib": [
        336
      ],
      "PrivStruct": [
        716
      ],
      "PrivateEvent": [
        252
      ],
      "TimeValidation": [
        403
      ]
    },
    "id": 253,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 34,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:32:1"
      },
      {
        "absolutePath": "/Users/macbook/Documents/freelance/tokenominc/contracts/helpers/MetaTransactLib.sol",
        "file": "../helpers/MetaTransactLib.sol",
        "id": 36,
        "nodeType": "ImportDirective",
        "scope": 253,
        "sourceUnit": 337,
        "src": "66:63:1",
        "symbolAliases": [
          {
            "foreign": {
              "id": 35,
              "name": "MetaTransactLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "74:15:1",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/macbook/Documents/freelance/tokenominc/contracts/struct/PrivStruct.sol",
        "file": "../struct/PrivStruct.sol",
        "id": 38,
        "nodeType": "ImportDirective",
        "scope": 253,
        "sourceUnit": 717,
        "src": "130:52:1",
        "symbolAliases": [
          {
            "foreign": {
              "id": 37,
              "name": "PrivStruct",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "138:10:1",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/macbook/Documents/freelance/tokenominc/contracts/helpers/TimeValidation.sol",
        "file": "../helpers/TimeValidation.sol",
        "id": 40,
        "nodeType": "ImportDirective",
        "scope": 253,
        "sourceUnit": 404,
        "src": "183:61:1",
        "symbolAliases": [
          {
            "foreign": {
              "id": 39,
              "name": "TimeValidation",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "191:14:1",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 41,
              "name": "MetaTransactLib",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 336,
              "src": "271:15:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MetaTransactLib_$336",
                "typeString": "contract MetaTransactLib"
              }
            },
            "id": 42,
            "nodeType": "InheritanceSpecifier",
            "src": "271:15:1"
          },
          {
            "baseName": {
              "id": 43,
              "name": "TimeValidation",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 403,
              "src": "288:14:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TimeValidation_$403",
                "typeString": "contract TimeValidation"
              }
            },
            "id": 44,
            "nodeType": "InheritanceSpecifier",
            "src": "288:14:1"
          }
        ],
        "contractDependencies": [
          336,
          403,
          488,
          690,
          1140,
          2395
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 252,
        "linearizedBaseContracts": [
          252,
          403,
          336,
          690,
          488,
          1140,
          2395
        ],
        "name": "PrivateEvent",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 52,
              "nodeType": "Block",
              "src": "367:2:1",
              "statements": []
            },
            "id": 53,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "507269766174655f636f6e7472616374",
                    "id": 47,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "339:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_8ecad6386e33f9fcbb819bff9ae2f803c1a07c29cceea8ff7e20c0b8b0f185e3",
                      "typeString": "literal_string \"Private_contract\""
                    },
                    "value": "Private_contract"
                  },
                  {
                    "hexValue": "31",
                    "id": 48,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "359:3:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
                      "typeString": "literal_string \"1\""
                    },
                    "value": "1"
                  },
                  {
                    "hexValue": "35",
                    "id": 49,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "364:1:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_5_by_1",
                      "typeString": "int_const 5"
                    },
                    "value": "5"
                  }
                ],
                "id": 50,
                "modifierName": {
                  "id": 46,
                  "name": "MetaTransactLib",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 336,
                  "src": "323:15:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_MetaTransactLib_$336_$",
                    "typeString": "type(contract MetaTransactLib)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "323:43:1"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 45,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "320:2:1"
            },
            "returnParameters": {
              "id": 51,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "367:0:1"
            },
            "scope": 252,
            "src": "309:60:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 59,
            "name": "eventIsFinish",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 58,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "question_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 59,
                  "src": "395:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 54,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "395:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "correctAnswer",
                  "nodeType": "VariableDeclaration",
                  "scope": 59,
                  "src": "415:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 56,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "415:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "394:41:1"
            },
            "src": "375:61:1"
          },
          {
            "constant": false,
            "id": 63,
            "mutability": "mutable",
            "name": "events",
            "nodeType": "VariableDeclaration",
            "scope": 252,
            "src": "441:46:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_int256_$_t_struct$_EventData_$715_storage_$",
              "typeString": "mapping(int256 => struct PrivStruct.EventData)"
            },
            "typeName": {
              "id": 62,
              "keyType": {
                "id": 60,
                "name": "int256",
                "nodeType": "ElementaryTypeName",
                "src": "449:6:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_int256",
                  "typeString": "int256"
                }
              },
              "nodeType": "Mapping",
              "src": "441:39:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_int256_$_t_struct$_EventData_$715_storage_$",
                "typeString": "mapping(int256 => struct PrivStruct.EventData)"
              },
              "valueType": {
                "id": 61,
                "name": "PrivStruct.EventData",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 715,
                "src": "459:20:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_EventData_$715_storage_ptr",
                  "typeString": "struct PrivStruct.EventData"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 119,
              "nodeType": "Block",
              "src": "689:284:1",
              "statements": [
                {
                  "expression": {
                    "id": 81,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 76,
                          "name": "events",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63,
                          "src": "699:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_int256_$_t_struct$_EventData_$715_storage_$",
                            "typeString": "mapping(int256 => struct PrivStruct.EventData storage ref)"
                          }
                        },
                        "id": 78,
                        "indexExpression": {
                          "id": 77,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65,
                          "src": "706:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "699:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_EventData_$715_storage",
                          "typeString": "struct PrivStruct.EventData storage ref"
                        }
                      },
                      "id": 79,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "id",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 697,
                      "src": "699:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 80,
                      "name": "_id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65,
                      "src": "716:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "src": "699:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "id": 82,
                  "nodeType": "ExpressionStatement",
                  "src": "699:20:1"
                },
                {
                  "expression": {
                    "id": 88,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 83,
                          "name": "events",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63,
                          "src": "729:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_int256_$_t_struct$_EventData_$715_storage_$",
                            "typeString": "mapping(int256 => struct PrivStruct.EventData storage ref)"
                          }
                        },
                        "id": 85,
                        "indexExpression": {
                          "id": 84,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65,
                          "src": "736:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "729:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_EventData_$715_storage",
                          "typeString": "struct PrivStruct.EventData storage ref"
                        }
                      },
                      "id": 86,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "startTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 699,
                      "src": "729:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 87,
                      "name": "_startTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67,
                      "src": "753:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "729:34:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 89,
                  "nodeType": "ExpressionStatement",
                  "src": "729:34:1"
                },
                {
                  "expression": {
                    "id": 95,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 90,
                          "name": "events",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63,
                          "src": "773:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_int256_$_t_struct$_EventData_$715_storage_$",
                            "typeString": "mapping(int256 => struct PrivStruct.EventData storage ref)"
                          }
                        },
                        "id": 92,
                        "indexExpression": {
                          "id": 91,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65,
                          "src": "780:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "773:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_EventData_$715_storage",
                          "typeString": "struct PrivStruct.EventData storage ref"
                        }
                      },
                      "id": 93,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "endTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 701,
                      "src": "773:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 94,
                      "name": "_endTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 69,
                      "src": "795:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "773:30:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 96,
                  "nodeType": "ExpressionStatement",
                  "src": "773:30:1"
                },
                {
                  "expression": {
                    "id": 103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 97,
                          "name": "events",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63,
                          "src": "813:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_int256_$_t_struct$_EventData_$715_storage_$",
                            "typeString": "mapping(int256 => struct PrivStruct.EventData storage ref)"
                          }
                        },
                        "id": 99,
                        "indexExpression": {
                          "id": 98,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65,
                          "src": "820:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "813:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_EventData_$715_storage",
                          "typeString": "struct PrivStruct.EventData storage ref"
                        }
                      },
                      "id": 100,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "host",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 712,
                      "src": "813:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 101,
                        "name": "_msgSender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          335
                        ],
                        "referencedDeclaration": 335,
                        "src": "832:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                          "typeString": "function () view returns (address payable)"
                        }
                      },
                      "id": 102,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "832:12:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "813:31:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 104,
                  "nodeType": "ExpressionStatement",
                  "src": "813:31:1"
                },
                {
                  "expression": {
                    "id": 110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 105,
                          "name": "events",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63,
                          "src": "854:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_int256_$_t_struct$_EventData_$715_storage_$",
                            "typeString": "mapping(int256 => struct PrivStruct.EventData storage ref)"
                          }
                        },
                        "id": 107,
                        "indexExpression": {
                          "id": 106,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65,
                          "src": "861:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "854:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_EventData_$715_storage",
                          "typeString": "struct PrivStruct.EventData storage ref"
                        }
                      },
                      "id": 108,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "correctAnswerSetter",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 714,
                      "src": "854:31:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 109,
                      "name": "_correctAnswerSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73,
                      "src": "888:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "854:54:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 111,
                  "nodeType": "ExpressionStatement",
                  "src": "854:54:1"
                },
                {
                  "expression": {
                    "id": 117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 112,
                          "name": "events",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63,
                          "src": "918:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_int256_$_t_struct$_EventData_$715_storage_$",
                            "typeString": "mapping(int256 => struct PrivStruct.EventData storage ref)"
                          }
                        },
                        "id": 114,
                        "indexExpression": {
                          "id": 113,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65,
                          "src": "925:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "918:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_EventData_$715_storage",
                          "typeString": "struct PrivStruct.EventData storage ref"
                        }
                      },
                      "id": 115,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "questionQuantity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 710,
                      "src": "918:28:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 116,
                      "name": "_questionQuantity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71,
                      "src": "949:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "918:48:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 118,
                  "nodeType": "ExpressionStatement",
                  "src": "918:48:1"
                }
              ]
            },
            "functionSelector": "b2fba7e1",
            "id": 120,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createEvent",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 74,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65,
                  "mutability": "mutable",
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 120,
                  "src": "524:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 64,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "524:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67,
                  "mutability": "mutable",
                  "name": "_startTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 120,
                  "src": "544:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 66,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "544:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 69,
                  "mutability": "mutable",
                  "name": "_endTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 120,
                  "src": "572:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 68,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "572:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 71,
                  "mutability": "mutable",
                  "name": "_questionQuantity",
                  "nodeType": "VariableDeclaration",
                  "scope": 120,
                  "src": "598:23:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 70,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "598:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73,
                  "mutability": "mutable",
                  "name": "_correctAnswerSetter",
                  "nodeType": "VariableDeclaration",
                  "scope": 120,
                  "src": "631:36:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 72,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "631:15:1",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "514:159:1"
            },
            "returnParameters": {
              "id": 75,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "689:0:1"
            },
            "scope": 252,
            "src": "494:479:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 145,
              "nodeType": "Block",
              "src": "1094:193:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 128,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              335
                            ],
                            "referencedDeclaration": 335,
                            "src": "1125:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                              "typeString": "function () view returns (address payable)"
                            }
                          },
                          "id": 129,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1125:12:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 130,
                              "name": "events",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 63,
                              "src": "1141:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_int256_$_t_struct$_EventData_$715_storage_$",
                                "typeString": "mapping(int256 => struct PrivStruct.EventData storage ref)"
                              }
                            },
                            "id": 132,
                            "indexExpression": {
                              "id": 131,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 122,
                              "src": "1148:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1141:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_EventData_$715_storage",
                              "typeString": "struct PrivStruct.EventData storage ref"
                            }
                          },
                          "id": 133,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "host",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 712,
                          "src": "1141:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1125:32:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79206f776e65722063616e207365742061646d696e206f66206576656e74",
                        "id": 135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1171:35:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6e015ac6f7340452588438d067edc05354ebcc726411e1953ff75a30f4bf9a16",
                          "typeString": "literal_string \"Only owner can set admin of event\""
                        },
                        "value": "Only owner can set admin of event"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6e015ac6f7340452588438d067edc05354ebcc726411e1953ff75a30f4bf9a16",
                          "typeString": "literal_string \"Only owner can set admin of event\""
                        }
                      ],
                      "id": 127,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1104:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1104:112:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 137,
                  "nodeType": "ExpressionStatement",
                  "src": "1104:112:1"
                },
                {
                  "expression": {
                    "id": 143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 138,
                          "name": "events",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63,
                          "src": "1226:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_int256_$_t_struct$_EventData_$715_storage_$",
                            "typeString": "mapping(int256 => struct PrivStruct.EventData storage ref)"
                          }
                        },
                        "id": 140,
                        "indexExpression": {
                          "id": 139,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 122,
                          "src": "1233:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1226:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_EventData_$715_storage",
                          "typeString": "struct PrivStruct.EventData storage ref"
                        }
                      },
                      "id": 141,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "correctAnswerSetter",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 714,
                      "src": "1226:31:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 142,
                      "name": "_correctAnswerSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 124,
                      "src": "1260:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1226:54:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 144,
                  "nodeType": "ExpressionStatement",
                  "src": "1226:54:1"
                }
              ]
            },
            "functionSelector": "9b09434d",
            "id": 146,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setRoleOfAdmin",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 125,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 122,
                  "mutability": "mutable",
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 146,
                  "src": "1016:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 121,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1016:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 124,
                  "mutability": "mutable",
                  "name": "_correctAnswerSetter",
                  "nodeType": "VariableDeclaration",
                  "scope": 146,
                  "src": "1036:36:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 123,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1036:15:1",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1006:72:1"
            },
            "returnParameters": {
              "id": 126,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1094:0:1"
            },
            "scope": 252,
            "src": "983:304:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 192,
              "nodeType": "Block",
              "src": "1359:264:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_int8",
                          "typeString": "int8"
                        },
                        "id": 165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 155,
                                  "name": "events",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 63,
                                  "src": "1388:6:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_int256_$_t_struct$_EventData_$715_storage_$",
                                    "typeString": "mapping(int256 => struct PrivStruct.EventData storage ref)"
                                  }
                                },
                                "id": 157,
                                "indexExpression": {
                                  "id": 156,
                                  "name": "_id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 148,
                                  "src": "1395:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1388:11:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_EventData_$715_storage",
                                  "typeString": "struct PrivStruct.EventData storage ref"
                                }
                              },
                              "id": 158,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "startTime",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 699,
                              "src": "1388:21:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 159,
                                  "name": "events",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 63,
                                  "src": "1411:6:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_int256_$_t_struct$_EventData_$715_storage_$",
                                    "typeString": "mapping(int256 => struct PrivStruct.EventData storage ref)"
                                  }
                                },
                                "id": 161,
                                "indexExpression": {
                                  "id": 160,
                                  "name": "_id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 148,
                                  "src": "1418:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1411:11:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_EventData_$715_storage",
                                  "typeString": "struct PrivStruct.EventData storage ref"
                                }
                              },
                              "id": 162,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "endTime",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 701,
                              "src": "1411:19:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 154,
                            "name": "timeAnswer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 378,
                            "src": "1377:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_int8_$",
                              "typeString": "function (uint256,uint256) view returns (int8)"
                            }
                          },
                          "id": 163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1377:54:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_int8",
                            "typeString": "int8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 164,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1435:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1377:59:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54696d65206973206e6f742076616c6964",
                        "id": 166,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1438:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9e9a26f4f07e0c63012adef2df6204f01fed23df9d42636088275af3a1a446ad",
                          "typeString": "literal_string \"Time is not valid\""
                        },
                        "value": "Time is not valid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9e9a26f4f07e0c63012adef2df6204f01fed23df9d42636088275af3a1a446ad",
                          "typeString": "literal_string \"Time is not valid\""
                        }
                      ],
                      "id": 153,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1369:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1369:89:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 168,
                  "nodeType": "ExpressionStatement",
                  "src": "1369:89:1"
                },
                {
                  "assignments": [
                    172
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 172,
                      "mutability": "mutable",
                      "name": "parts",
                      "nodeType": "VariableDeclaration",
                      "scope": 192,
                      "src": "1468:35:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Participant_$695_memory_ptr",
                        "typeString": "struct PrivStruct.Participant"
                      },
                      "typeName": {
                        "id": 171,
                        "name": "PrivStruct.Participant",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 695,
                        "src": "1468:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Participant_$695_storage_ptr",
                          "typeString": "struct PrivStruct.Participant"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 173,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1468:35:1"
                },
                {
                  "expression": {
                    "id": 180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 174,
                      "name": "parts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 172,
                      "src": "1513:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Participant_$695_memory_ptr",
                        "typeString": "struct PrivStruct.Participant memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 177,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              335
                            ],
                            "referencedDeclaration": 335,
                            "src": "1544:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                              "typeString": "function () view returns (address payable)"
                            }
                          },
                          "id": 178,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1544:12:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "expression": {
                          "id": 175,
                          "name": "PrivStruct",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 716,
                          "src": "1521:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_PrivStruct_$716_$",
                            "typeString": "type(library PrivStruct)"
                          }
                        },
                        "id": 176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "Participant",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 695,
                        "src": "1521:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Participant_$695_storage_ptr_$",
                          "typeString": "type(struct PrivStruct.Participant storage pointer)"
                        }
                      },
                      "id": 179,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1521:36:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Participant_$695_memory_ptr",
                        "typeString": "struct PrivStruct.Participant memory"
                      }
                    },
                    "src": "1513:44:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Participant_$695_memory_ptr",
                      "typeString": "struct PrivStruct.Participant memory"
                    }
                  },
                  "id": 181,
                  "nodeType": "ExpressionStatement",
                  "src": "1513:44:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 189,
                        "name": "parts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 172,
                        "src": "1610:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Participant_$695_memory_ptr",
                          "typeString": "struct PrivStruct.Participant memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Participant_$695_memory_ptr",
                          "typeString": "struct PrivStruct.Participant memory"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 182,
                              "name": "events",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 63,
                              "src": "1567:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_int256_$_t_struct$_EventData_$715_storage_$",
                                "typeString": "mapping(int256 => struct PrivStruct.EventData storage ref)"
                              }
                            },
                            "id": 184,
                            "indexExpression": {
                              "id": 183,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 148,
                              "src": "1574:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1567:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_EventData_$715_storage",
                              "typeString": "struct PrivStruct.EventData storage ref"
                            }
                          },
                          "id": 185,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "participant",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 708,
                          "src": "1567:23:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_Participant_$695_storage_$dyn_storage_$",
                            "typeString": "mapping(uint256 => struct PrivStruct.Participant storage ref[] storage ref)"
                          }
                        },
                        "id": 187,
                        "indexExpression": {
                          "id": 186,
                          "name": "_whichAnswer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 150,
                          "src": "1591:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1567:37:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Participant_$695_storage_$dyn_storage",
                          "typeString": "struct PrivStruct.Participant storage ref[] storage ref"
                        }
                      },
                      "id": 188,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1567:42:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Participant_$695_storage_$returns$__$",
                        "typeString": "function (struct PrivStruct.Participant storage ref)"
                      }
                    },
                    "id": 190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1567:49:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 191,
                  "nodeType": "ExpressionStatement",
                  "src": "1567:49:1"
                }
              ]
            },
            "functionSelector": "2a7100cc",
            "id": 193,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setAnswer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 151,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 148,
                  "mutability": "mutable",
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 193,
                  "src": "1312:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 147,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1312:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 150,
                  "mutability": "mutable",
                  "name": "_whichAnswer",
                  "nodeType": "VariableDeclaration",
                  "scope": 193,
                  "src": "1324:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 149,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1324:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1311:32:1"
            },
            "returnParameters": {
              "id": 152,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1359:0:1"
            },
            "scope": 252,
            "src": "1293:330:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 250,
              "nodeType": "Block",
              "src": "1703:415:1",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    },
                    "id": 208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 200,
                          "name": "events",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63,
                          "src": "1716:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_int256_$_t_struct$_EventData_$715_storage_$",
                            "typeString": "mapping(int256 => struct PrivStruct.EventData storage ref)"
                          }
                        },
                        "id": 202,
                        "indexExpression": {
                          "id": 201,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 195,
                          "src": "1723:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1716:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_EventData_$715_storage",
                          "typeString": "struct PrivStruct.EventData storage ref"
                        }
                      },
                      "id": 203,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "correctAnswerSetter",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 714,
                      "src": "1716:31:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 206,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1759:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1751:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 204,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1751:7:1",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 207,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1751:10:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1716:45:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 221,
                  "nodeType": "IfStatement",
                  "src": "1713:197:1",
                  "trueBody": {
                    "id": 220,
                    "nodeType": "Block",
                    "src": "1762:148:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "id": 216,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 210,
                                  "name": "_msgSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    335
                                  ],
                                  "referencedDeclaration": 335,
                                  "src": "1793:10:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                    "typeString": "function () view returns (address payable)"
                                  }
                                },
                                "id": 211,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1793:12:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 212,
                                    "name": "events",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 63,
                                    "src": "1809:6:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_int256_$_t_struct$_EventData_$715_storage_$",
                                      "typeString": "mapping(int256 => struct PrivStruct.EventData storage ref)"
                                    }
                                  },
                                  "id": 214,
                                  "indexExpression": {
                                    "id": 213,
                                    "name": "_id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 195,
                                    "src": "1816:3:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int256",
                                      "typeString": "int256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1809:11:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_EventData_$715_storage",
                                    "typeString": "struct PrivStruct.EventData storage ref"
                                  }
                                },
                                "id": 215,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "correctAnswerSetter",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 714,
                                "src": "1809:31:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "1793:47:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4f6e6c792061646d696e2063616e2073657420636f727265637420616e73776572",
                              "id": 217,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1854:35:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_19f085f94f34b05348e8f75d4826551a0fc61d25f8ed72d81b46037116710aa3",
                                "typeString": "literal_string \"Only admin can set correct answer\""
                              },
                              "value": "Only admin can set correct answer"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_19f085f94f34b05348e8f75d4826551a0fc61d25f8ed72d81b46037116710aa3",
                                "typeString": "literal_string \"Only admin can set correct answer\""
                              }
                            ],
                            "id": 209,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1772:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 218,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1772:127:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 219,
                        "nodeType": "ExpressionStatement",
                        "src": "1772:127:1"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_int8",
                          "typeString": "int8"
                        },
                        "id": 234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 224,
                                  "name": "events",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 63,
                                  "src": "1939:6:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_int256_$_t_struct$_EventData_$715_storage_$",
                                    "typeString": "mapping(int256 => struct PrivStruct.EventData storage ref)"
                                  }
                                },
                                "id": 226,
                                "indexExpression": {
                                  "id": 225,
                                  "name": "_id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 195,
                                  "src": "1946:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1939:11:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_EventData_$715_storage",
                                  "typeString": "struct PrivStruct.EventData storage ref"
                                }
                              },
                              "id": 227,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "startTime",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 699,
                              "src": "1939:21:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 228,
                                  "name": "events",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 63,
                                  "src": "1962:6:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_int256_$_t_struct$_EventData_$715_storage_$",
                                    "typeString": "mapping(int256 => struct PrivStruct.EventData storage ref)"
                                  }
                                },
                                "id": 230,
                                "indexExpression": {
                                  "id": 229,
                                  "name": "_id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 195,
                                  "src": "1969:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1962:11:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_EventData_$715_storage",
                                  "typeString": "struct PrivStruct.EventData storage ref"
                                }
                              },
                              "id": 231,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "endTime",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 701,
                              "src": "1962:19:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 223,
                            "name": "timeAnswer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 378,
                            "src": "1928:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_int8_$",
                              "typeString": "function (uint256,uint256) view returns (int8)"
                            }
                          },
                          "id": 232,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1928:54:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_int8",
                            "typeString": "int8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 233,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1986:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "1928:59:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54696d65206973206e6f742076616c6964",
                        "id": 235,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1989:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9e9a26f4f07e0c63012adef2df6204f01fed23df9d42636088275af3a1a446ad",
                          "typeString": "literal_string \"Time is not valid\""
                        },
                        "value": "Time is not valid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9e9a26f4f07e0c63012adef2df6204f01fed23df9d42636088275af3a1a446ad",
                          "typeString": "literal_string \"Time is not valid\""
                        }
                      ],
                      "id": 222,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1920:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1920:89:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 237,
                  "nodeType": "ExpressionStatement",
                  "src": "1920:89:1"
                },
                {
                  "expression": {
                    "id": 243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 238,
                          "name": "events",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63,
                          "src": "2019:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_int256_$_t_struct$_EventData_$715_storage_$",
                            "typeString": "mapping(int256 => struct PrivStruct.EventData storage ref)"
                          }
                        },
                        "id": 240,
                        "indexExpression": {
                          "id": 239,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 195,
                          "src": "2026:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2019:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_EventData_$715_storage",
                          "typeString": "struct PrivStruct.EventData storage ref"
                        }
                      },
                      "id": 241,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "correctAnswer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 703,
                      "src": "2019:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 242,
                      "name": "_correctAnswer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 197,
                      "src": "2047:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "2019:42:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 244,
                  "nodeType": "ExpressionStatement",
                  "src": "2019:42:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 246,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 195,
                        "src": "2091:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      {
                        "id": 247,
                        "name": "_correctAnswer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 197,
                        "src": "2096:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 245,
                      "name": "eventIsFinish",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59,
                      "src": "2077:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_int256_$_t_uint8_$returns$__$",
                        "typeString": "function (int256,uint8)"
                      }
                    },
                    "id": 248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2077:34:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 249,
                  "nodeType": "EmitStatement",
                  "src": "2072:39:1"
                }
              ]
            },
            "functionSelector": "68c882d0",
            "id": 251,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setCorrectAnswer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 198,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 195,
                  "mutability": "mutable",
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 251,
                  "src": "1655:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 194,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1655:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 197,
                  "mutability": "mutable",
                  "name": "_correctAnswer",
                  "nodeType": "VariableDeclaration",
                  "scope": 251,
                  "src": "1667:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 196,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1667:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1654:34:1"
            },
            "returnParameters": {
              "id": 199,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1703:0:1"
            },
            "scope": 252,
            "src": "1629:489:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 253,
        "src": "246:1874:1"
      }
    ],
    "src": "32:2088:1"
  },
  "legacyAST": {
    "absolutePath": "/Users/macbook/Documents/freelance/tokenominc/contracts/events/PrivateEvents.sol",
    "exportedSymbols": {
      "MetaTransactLib": [
        336
      ],
      "PrivStruct": [
        716
      ],
      "PrivateEvent": [
        252
      ],
      "TimeValidation": [
        403
      ]
    },
    "id": 253,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 34,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:32:1"
      },
      {
        "absolutePath": "/Users/macbook/Documents/freelance/tokenominc/contracts/helpers/MetaTransactLib.sol",
        "file": "../helpers/MetaTransactLib.sol",
        "id": 36,
        "nodeType": "ImportDirective",
        "scope": 253,
        "sourceUnit": 337,
        "src": "66:63:1",
        "symbolAliases": [
          {
            "foreign": {
              "id": 35,
              "name": "MetaTransactLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "74:15:1",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/macbook/Documents/freelance/tokenominc/contracts/struct/PrivStruct.sol",
        "file": "../struct/PrivStruct.sol",
        "id": 38,
        "nodeType": "ImportDirective",
        "scope": 253,
        "sourceUnit": 717,
        "src": "130:52:1",
        "symbolAliases": [
          {
            "foreign": {
              "id": 37,
              "name": "PrivStruct",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "138:10:1",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/macbook/Documents/freelance/tokenominc/contracts/helpers/TimeValidation.sol",
        "file": "../helpers/TimeValidation.sol",
        "id": 40,
        "nodeType": "ImportDirective",
        "scope": 253,
        "sourceUnit": 404,
        "src": "183:61:1",
        "symbolAliases": [
          {
            "foreign": {
              "id": 39,
              "name": "TimeValidation",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "191:14:1",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 41,
              "name": "MetaTransactLib",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 336,
              "src": "271:15:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MetaTransactLib_$336",
                "typeString": "contract MetaTransactLib"
              }
            },
            "id": 42,
            "nodeType": "InheritanceSpecifier",
            "src": "271:15:1"
          },
          {
            "baseName": {
              "id": 43,
              "name": "TimeValidation",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 403,
              "src": "288:14:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TimeValidation_$403",
                "typeString": "contract TimeValidation"
              }
            },
            "id": 44,
            "nodeType": "InheritanceSpecifier",
            "src": "288:14:1"
          }
        ],
        "contractDependencies": [
          336,
          403,
          488,
          690,
          1140,
          2395
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 252,
        "linearizedBaseContracts": [
          252,
          403,
          336,
          690,
          488,
          1140,
          2395
        ],
        "name": "PrivateEvent",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 52,
              "nodeType": "Block",
              "src": "367:2:1",
              "statements": []
            },
            "id": 53,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "507269766174655f636f6e7472616374",
                    "id": 47,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "339:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_8ecad6386e33f9fcbb819bff9ae2f803c1a07c29cceea8ff7e20c0b8b0f185e3",
                      "typeString": "literal_string \"Private_contract\""
                    },
                    "value": "Private_contract"
                  },
                  {
                    "hexValue": "31",
                    "id": 48,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "359:3:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
                      "typeString": "literal_string \"1\""
                    },
                    "value": "1"
                  },
                  {
                    "hexValue": "35",
                    "id": 49,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "364:1:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_5_by_1",
                      "typeString": "int_const 5"
                    },
                    "value": "5"
                  }
                ],
                "id": 50,
                "modifierName": {
                  "id": 46,
                  "name": "MetaTransactLib",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 336,
                  "src": "323:15:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_MetaTransactLib_$336_$",
                    "typeString": "type(contract MetaTransactLib)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "323:43:1"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 45,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "320:2:1"
            },
            "returnParameters": {
              "id": 51,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "367:0:1"
            },
            "scope": 252,
            "src": "309:60:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 59,
            "name": "eventIsFinish",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 58,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "question_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 59,
                  "src": "395:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 54,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "395:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "correctAnswer",
                  "nodeType": "VariableDeclaration",
                  "scope": 59,
                  "src": "415:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 56,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "415:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "394:41:1"
            },
            "src": "375:61:1"
          },
          {
            "constant": false,
            "id": 63,
            "mutability": "mutable",
            "name": "events",
            "nodeType": "VariableDeclaration",
            "scope": 252,
            "src": "441:46:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_int256_$_t_struct$_EventData_$715_storage_$",
              "typeString": "mapping(int256 => struct PrivStruct.EventData)"
            },
            "typeName": {
              "id": 62,
              "keyType": {
                "id": 60,
                "name": "int256",
                "nodeType": "ElementaryTypeName",
                "src": "449:6:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_int256",
                  "typeString": "int256"
                }
              },
              "nodeType": "Mapping",
              "src": "441:39:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_int256_$_t_struct$_EventData_$715_storage_$",
                "typeString": "mapping(int256 => struct PrivStruct.EventData)"
              },
              "valueType": {
                "id": 61,
                "name": "PrivStruct.EventData",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 715,
                "src": "459:20:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_EventData_$715_storage_ptr",
                  "typeString": "struct PrivStruct.EventData"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 119,
              "nodeType": "Block",
              "src": "689:284:1",
              "statements": [
                {
                  "expression": {
                    "id": 81,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 76,
                          "name": "events",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63,
                          "src": "699:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_int256_$_t_struct$_EventData_$715_storage_$",
                            "typeString": "mapping(int256 => struct PrivStruct.EventData storage ref)"
                          }
                        },
                        "id": 78,
                        "indexExpression": {
                          "id": 77,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65,
                          "src": "706:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "699:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_EventData_$715_storage",
                          "typeString": "struct PrivStruct.EventData storage ref"
                        }
                      },
                      "id": 79,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "id",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 697,
                      "src": "699:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 80,
                      "name": "_id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65,
                      "src": "716:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "src": "699:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "id": 82,
                  "nodeType": "ExpressionStatement",
                  "src": "699:20:1"
                },
                {
                  "expression": {
                    "id": 88,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 83,
                          "name": "events",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63,
                          "src": "729:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_int256_$_t_struct$_EventData_$715_storage_$",
                            "typeString": "mapping(int256 => struct PrivStruct.EventData storage ref)"
                          }
                        },
                        "id": 85,
                        "indexExpression": {
                          "id": 84,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65,
                          "src": "736:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "729:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_EventData_$715_storage",
                          "typeString": "struct PrivStruct.EventData storage ref"
                        }
                      },
                      "id": 86,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "startTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 699,
                      "src": "729:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 87,
                      "name": "_startTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67,
                      "src": "753:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "729:34:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 89,
                  "nodeType": "ExpressionStatement",
                  "src": "729:34:1"
                },
                {
                  "expression": {
                    "id": 95,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 90,
                          "name": "events",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63,
                          "src": "773:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_int256_$_t_struct$_EventData_$715_storage_$",
                            "typeString": "mapping(int256 => struct PrivStruct.EventData storage ref)"
                          }
                        },
                        "id": 92,
                        "indexExpression": {
                          "id": 91,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65,
                          "src": "780:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "773:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_EventData_$715_storage",
                          "typeString": "struct PrivStruct.EventData storage ref"
                        }
                      },
                      "id": 93,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "endTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 701,
                      "src": "773:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 94,
                      "name": "_endTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 69,
                      "src": "795:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "773:30:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 96,
                  "nodeType": "ExpressionStatement",
                  "src": "773:30:1"
                },
                {
                  "expression": {
                    "id": 103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 97,
                          "name": "events",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63,
                          "src": "813:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_int256_$_t_struct$_EventData_$715_storage_$",
                            "typeString": "mapping(int256 => struct PrivStruct.EventData storage ref)"
                          }
                        },
                        "id": 99,
                        "indexExpression": {
                          "id": 98,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65,
                          "src": "820:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "813:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_EventData_$715_storage",
                          "typeString": "struct PrivStruct.EventData storage ref"
                        }
                      },
                      "id": 100,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "host",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 712,
                      "src": "813:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 101,
                        "name": "_msgSender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          335
                        ],
                        "referencedDeclaration": 335,
                        "src": "832:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                          "typeString": "function () view returns (address payable)"
                        }
                      },
                      "id": 102,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "832:12:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "813:31:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 104,
                  "nodeType": "ExpressionStatement",
                  "src": "813:31:1"
                },
                {
                  "expression": {
                    "id": 110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 105,
                          "name": "events",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63,
                          "src": "854:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_int256_$_t_struct$_EventData_$715_storage_$",
                            "typeString": "mapping(int256 => struct PrivStruct.EventData storage ref)"
                          }
                        },
                        "id": 107,
                        "indexExpression": {
                          "id": 106,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65,
                          "src": "861:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "854:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_EventData_$715_storage",
                          "typeString": "struct PrivStruct.EventData storage ref"
                        }
                      },
                      "id": 108,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "correctAnswerSetter",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 714,
                      "src": "854:31:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 109,
                      "name": "_correctAnswerSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73,
                      "src": "888:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "854:54:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 111,
                  "nodeType": "ExpressionStatement",
                  "src": "854:54:1"
                },
                {
                  "expression": {
                    "id": 117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 112,
                          "name": "events",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63,
                          "src": "918:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_int256_$_t_struct$_EventData_$715_storage_$",
                            "typeString": "mapping(int256 => struct PrivStruct.EventData storage ref)"
                          }
                        },
                        "id": 114,
                        "indexExpression": {
                          "id": 113,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65,
                          "src": "925:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "918:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_EventData_$715_storage",
                          "typeString": "struct PrivStruct.EventData storage ref"
                        }
                      },
                      "id": 115,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "questionQuantity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 710,
                      "src": "918:28:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 116,
                      "name": "_questionQuantity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71,
                      "src": "949:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "918:48:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 118,
                  "nodeType": "ExpressionStatement",
                  "src": "918:48:1"
                }
              ]
            },
            "functionSelector": "b2fba7e1",
            "id": 120,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createEvent",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 74,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65,
                  "mutability": "mutable",
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 120,
                  "src": "524:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 64,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "524:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67,
                  "mutability": "mutable",
                  "name": "_startTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 120,
                  "src": "544:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 66,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "544:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 69,
                  "mutability": "mutable",
                  "name": "_endTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 120,
                  "src": "572:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 68,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "572:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 71,
                  "mutability": "mutable",
                  "name": "_questionQuantity",
                  "nodeType": "VariableDeclaration",
                  "scope": 120,
                  "src": "598:23:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 70,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "598:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73,
                  "mutability": "mutable",
                  "name": "_correctAnswerSetter",
                  "nodeType": "VariableDeclaration",
                  "scope": 120,
                  "src": "631:36:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 72,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "631:15:1",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "514:159:1"
            },
            "returnParameters": {
              "id": 75,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "689:0:1"
            },
            "scope": 252,
            "src": "494:479:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 145,
              "nodeType": "Block",
              "src": "1094:193:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 128,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              335
                            ],
                            "referencedDeclaration": 335,
                            "src": "1125:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                              "typeString": "function () view returns (address payable)"
                            }
                          },
                          "id": 129,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1125:12:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 130,
                              "name": "events",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 63,
                              "src": "1141:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_int256_$_t_struct$_EventData_$715_storage_$",
                                "typeString": "mapping(int256 => struct PrivStruct.EventData storage ref)"
                              }
                            },
                            "id": 132,
                            "indexExpression": {
                              "id": 131,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 122,
                              "src": "1148:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1141:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_EventData_$715_storage",
                              "typeString": "struct PrivStruct.EventData storage ref"
                            }
                          },
                          "id": 133,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "host",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 712,
                          "src": "1141:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1125:32:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79206f776e65722063616e207365742061646d696e206f66206576656e74",
                        "id": 135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1171:35:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6e015ac6f7340452588438d067edc05354ebcc726411e1953ff75a30f4bf9a16",
                          "typeString": "literal_string \"Only owner can set admin of event\""
                        },
                        "value": "Only owner can set admin of event"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6e015ac6f7340452588438d067edc05354ebcc726411e1953ff75a30f4bf9a16",
                          "typeString": "literal_string \"Only owner can set admin of event\""
                        }
                      ],
                      "id": 127,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1104:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1104:112:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 137,
                  "nodeType": "ExpressionStatement",
                  "src": "1104:112:1"
                },
                {
                  "expression": {
                    "id": 143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 138,
                          "name": "events",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63,
                          "src": "1226:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_int256_$_t_struct$_EventData_$715_storage_$",
                            "typeString": "mapping(int256 => struct PrivStruct.EventData storage ref)"
                          }
                        },
                        "id": 140,
                        "indexExpression": {
                          "id": 139,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 122,
                          "src": "1233:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1226:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_EventData_$715_storage",
                          "typeString": "struct PrivStruct.EventData storage ref"
                        }
                      },
                      "id": 141,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "correctAnswerSetter",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 714,
                      "src": "1226:31:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 142,
                      "name": "_correctAnswerSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 124,
                      "src": "1260:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1226:54:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 144,
                  "nodeType": "ExpressionStatement",
                  "src": "1226:54:1"
                }
              ]
            },
            "functionSelector": "9b09434d",
            "id": 146,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setRoleOfAdmin",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 125,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 122,
                  "mutability": "mutable",
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 146,
                  "src": "1016:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 121,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1016:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 124,
                  "mutability": "mutable",
                  "name": "_correctAnswerSetter",
                  "nodeType": "VariableDeclaration",
                  "scope": 146,
                  "src": "1036:36:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 123,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1036:15:1",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1006:72:1"
            },
            "returnParameters": {
              "id": 126,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1094:0:1"
            },
            "scope": 252,
            "src": "983:304:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 192,
              "nodeType": "Block",
              "src": "1359:264:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_int8",
                          "typeString": "int8"
                        },
                        "id": 165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 155,
                                  "name": "events",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 63,
                                  "src": "1388:6:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_int256_$_t_struct$_EventData_$715_storage_$",
                                    "typeString": "mapping(int256 => struct PrivStruct.EventData storage ref)"
                                  }
                                },
                                "id": 157,
                                "indexExpression": {
                                  "id": 156,
                                  "name": "_id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 148,
                                  "src": "1395:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1388:11:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_EventData_$715_storage",
                                  "typeString": "struct PrivStruct.EventData storage ref"
                                }
                              },
                              "id": 158,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "startTime",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 699,
                              "src": "1388:21:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 159,
                                  "name": "events",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 63,
                                  "src": "1411:6:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_int256_$_t_struct$_EventData_$715_storage_$",
                                    "typeString": "mapping(int256 => struct PrivStruct.EventData storage ref)"
                                  }
                                },
                                "id": 161,
                                "indexExpression": {
                                  "id": 160,
                                  "name": "_id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 148,
                                  "src": "1418:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1411:11:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_EventData_$715_storage",
                                  "typeString": "struct PrivStruct.EventData storage ref"
                                }
                              },
                              "id": 162,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "endTime",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 701,
                              "src": "1411:19:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 154,
                            "name": "timeAnswer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 378,
                            "src": "1377:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_int8_$",
                              "typeString": "function (uint256,uint256) view returns (int8)"
                            }
                          },
                          "id": 163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1377:54:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_int8",
                            "typeString": "int8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 164,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1435:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1377:59:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54696d65206973206e6f742076616c6964",
                        "id": 166,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1438:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9e9a26f4f07e0c63012adef2df6204f01fed23df9d42636088275af3a1a446ad",
                          "typeString": "literal_string \"Time is not valid\""
                        },
                        "value": "Time is not valid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9e9a26f4f07e0c63012adef2df6204f01fed23df9d42636088275af3a1a446ad",
                          "typeString": "literal_string \"Time is not valid\""
                        }
                      ],
                      "id": 153,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1369:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1369:89:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 168,
                  "nodeType": "ExpressionStatement",
                  "src": "1369:89:1"
                },
                {
                  "assignments": [
                    172
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 172,
                      "mutability": "mutable",
                      "name": "parts",
                      "nodeType": "VariableDeclaration",
                      "scope": 192,
                      "src": "1468:35:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Participant_$695_memory_ptr",
                        "typeString": "struct PrivStruct.Participant"
                      },
                      "typeName": {
                        "id": 171,
                        "name": "PrivStruct.Participant",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 695,
                        "src": "1468:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Participant_$695_storage_ptr",
                          "typeString": "struct PrivStruct.Participant"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 173,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1468:35:1"
                },
                {
                  "expression": {
                    "id": 180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 174,
                      "name": "parts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 172,
                      "src": "1513:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Participant_$695_memory_ptr",
                        "typeString": "struct PrivStruct.Participant memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 177,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              335
                            ],
                            "referencedDeclaration": 335,
                            "src": "1544:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                              "typeString": "function () view returns (address payable)"
                            }
                          },
                          "id": 178,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1544:12:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "expression": {
                          "id": 175,
                          "name": "PrivStruct",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 716,
                          "src": "1521:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_PrivStruct_$716_$",
                            "typeString": "type(library PrivStruct)"
                          }
                        },
                        "id": 176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "Participant",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 695,
                        "src": "1521:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Participant_$695_storage_ptr_$",
                          "typeString": "type(struct PrivStruct.Participant storage pointer)"
                        }
                      },
                      "id": 179,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1521:36:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Participant_$695_memory_ptr",
                        "typeString": "struct PrivStruct.Participant memory"
                      }
                    },
                    "src": "1513:44:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Participant_$695_memory_ptr",
                      "typeString": "struct PrivStruct.Participant memory"
                    }
                  },
                  "id": 181,
                  "nodeType": "ExpressionStatement",
                  "src": "1513:44:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 189,
                        "name": "parts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 172,
                        "src": "1610:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Participant_$695_memory_ptr",
                          "typeString": "struct PrivStruct.Participant memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Participant_$695_memory_ptr",
                          "typeString": "struct PrivStruct.Participant memory"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 182,
                              "name": "events",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 63,
                              "src": "1567:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_int256_$_t_struct$_EventData_$715_storage_$",
                                "typeString": "mapping(int256 => struct PrivStruct.EventData storage ref)"
                              }
                            },
                            "id": 184,
                            "indexExpression": {
                              "id": 183,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 148,
                              "src": "1574:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1567:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_EventData_$715_storage",
                              "typeString": "struct PrivStruct.EventData storage ref"
                            }
                          },
                          "id": 185,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "participant",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 708,
                          "src": "1567:23:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_Participant_$695_storage_$dyn_storage_$",
                            "typeString": "mapping(uint256 => struct PrivStruct.Participant storage ref[] storage ref)"
                          }
                        },
                        "id": 187,
                        "indexExpression": {
                          "id": 186,
                          "name": "_whichAnswer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 150,
                          "src": "1591:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1567:37:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Participant_$695_storage_$dyn_storage",
                          "typeString": "struct PrivStruct.Participant storage ref[] storage ref"
                        }
                      },
                      "id": 188,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1567:42:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Participant_$695_storage_$returns$__$",
                        "typeString": "function (struct PrivStruct.Participant storage ref)"
                      }
                    },
                    "id": 190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1567:49:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 191,
                  "nodeType": "ExpressionStatement",
                  "src": "1567:49:1"
                }
              ]
            },
            "functionSelector": "2a7100cc",
            "id": 193,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setAnswer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 151,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 148,
                  "mutability": "mutable",
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 193,
                  "src": "1312:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 147,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1312:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 150,
                  "mutability": "mutable",
                  "name": "_whichAnswer",
                  "nodeType": "VariableDeclaration",
                  "scope": 193,
                  "src": "1324:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 149,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1324:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1311:32:1"
            },
            "returnParameters": {
              "id": 152,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1359:0:1"
            },
            "scope": 252,
            "src": "1293:330:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 250,
              "nodeType": "Block",
              "src": "1703:415:1",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    },
                    "id": 208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 200,
                          "name": "events",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63,
                          "src": "1716:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_int256_$_t_struct$_EventData_$715_storage_$",
                            "typeString": "mapping(int256 => struct PrivStruct.EventData storage ref)"
                          }
                        },
                        "id": 202,
                        "indexExpression": {
                          "id": 201,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 195,
                          "src": "1723:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1716:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_EventData_$715_storage",
                          "typeString": "struct PrivStruct.EventData storage ref"
                        }
                      },
                      "id": 203,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "correctAnswerSetter",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 714,
                      "src": "1716:31:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 206,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1759:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1751:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 204,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1751:7:1",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 207,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1751:10:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1716:45:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 221,
                  "nodeType": "IfStatement",
                  "src": "1713:197:1",
                  "trueBody": {
                    "id": 220,
                    "nodeType": "Block",
                    "src": "1762:148:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "id": 216,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 210,
                                  "name": "_msgSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    335
                                  ],
                                  "referencedDeclaration": 335,
                                  "src": "1793:10:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                    "typeString": "function () view returns (address payable)"
                                  }
                                },
                                "id": 211,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1793:12:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 212,
                                    "name": "events",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 63,
                                    "src": "1809:6:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_int256_$_t_struct$_EventData_$715_storage_$",
                                      "typeString": "mapping(int256 => struct PrivStruct.EventData storage ref)"
                                    }
                                  },
                                  "id": 214,
                                  "indexExpression": {
                                    "id": 213,
                                    "name": "_id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 195,
                                    "src": "1816:3:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int256",
                                      "typeString": "int256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1809:11:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_EventData_$715_storage",
                                    "typeString": "struct PrivStruct.EventData storage ref"
                                  }
                                },
                                "id": 215,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "correctAnswerSetter",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 714,
                                "src": "1809:31:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "1793:47:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4f6e6c792061646d696e2063616e2073657420636f727265637420616e73776572",
                              "id": 217,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1854:35:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_19f085f94f34b05348e8f75d4826551a0fc61d25f8ed72d81b46037116710aa3",
                                "typeString": "literal_string \"Only admin can set correct answer\""
                              },
                              "value": "Only admin can set correct answer"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_19f085f94f34b05348e8f75d4826551a0fc61d25f8ed72d81b46037116710aa3",
                                "typeString": "literal_string \"Only admin can set correct answer\""
                              }
                            ],
                            "id": 209,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1772:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 218,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1772:127:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 219,
                        "nodeType": "ExpressionStatement",
                        "src": "1772:127:1"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_int8",
                          "typeString": "int8"
                        },
                        "id": 234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 224,
                                  "name": "events",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 63,
                                  "src": "1939:6:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_int256_$_t_struct$_EventData_$715_storage_$",
                                    "typeString": "mapping(int256 => struct PrivStruct.EventData storage ref)"
                                  }
                                },
                                "id": 226,
                                "indexExpression": {
                                  "id": 225,
                                  "name": "_id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 195,
                                  "src": "1946:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1939:11:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_EventData_$715_storage",
                                  "typeString": "struct PrivStruct.EventData storage ref"
                                }
                              },
                              "id": 227,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "startTime",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 699,
                              "src": "1939:21:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 228,
                                  "name": "events",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 63,
                                  "src": "1962:6:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_int256_$_t_struct$_EventData_$715_storage_$",
                                    "typeString": "mapping(int256 => struct PrivStruct.EventData storage ref)"
                                  }
                                },
                                "id": 230,
                                "indexExpression": {
                                  "id": 229,
                                  "name": "_id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 195,
                                  "src": "1969:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1962:11:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_EventData_$715_storage",
                                  "typeString": "struct PrivStruct.EventData storage ref"
                                }
                              },
                              "id": 231,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "endTime",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 701,
                              "src": "1962:19:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 223,
                            "name": "timeAnswer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 378,
                            "src": "1928:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_int8_$",
                              "typeString": "function (uint256,uint256) view returns (int8)"
                            }
                          },
                          "id": 232,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1928:54:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_int8",
                            "typeString": "int8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 233,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1986:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "1928:59:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54696d65206973206e6f742076616c6964",
                        "id": 235,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1989:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9e9a26f4f07e0c63012adef2df6204f01fed23df9d42636088275af3a1a446ad",
                          "typeString": "literal_string \"Time is not valid\""
                        },
                        "value": "Time is not valid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9e9a26f4f07e0c63012adef2df6204f01fed23df9d42636088275af3a1a446ad",
                          "typeString": "literal_string \"Time is not valid\""
                        }
                      ],
                      "id": 222,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1920:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1920:89:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 237,
                  "nodeType": "ExpressionStatement",
                  "src": "1920:89:1"
                },
                {
                  "expression": {
                    "id": 243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 238,
                          "name": "events",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63,
                          "src": "2019:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_int256_$_t_struct$_EventData_$715_storage_$",
                            "typeString": "mapping(int256 => struct PrivStruct.EventData storage ref)"
                          }
                        },
                        "id": 240,
                        "indexExpression": {
                          "id": 239,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 195,
                          "src": "2026:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2019:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_EventData_$715_storage",
                          "typeString": "struct PrivStruct.EventData storage ref"
                        }
                      },
                      "id": 241,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "correctAnswer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 703,
                      "src": "2019:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 242,
                      "name": "_correctAnswer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 197,
                      "src": "2047:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "2019:42:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 244,
                  "nodeType": "ExpressionStatement",
                  "src": "2019:42:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 246,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 195,
                        "src": "2091:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      {
                        "id": 247,
                        "name": "_correctAnswer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 197,
                        "src": "2096:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 245,
                      "name": "eventIsFinish",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59,
                      "src": "2077:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_int256_$_t_uint8_$returns$__$",
                        "typeString": "function (int256,uint8)"
                      }
                    },
                    "id": 248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2077:34:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 249,
                  "nodeType": "EmitStatement",
                  "src": "2072:39:1"
                }
              ]
            },
            "functionSelector": "68c882d0",
            "id": 251,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setCorrectAnswer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 198,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 195,
                  "mutability": "mutable",
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 251,
                  "src": "1655:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 194,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1655:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 197,
                  "mutability": "mutable",
                  "name": "_correctAnswer",
                  "nodeType": "VariableDeclaration",
                  "scope": 251,
                  "src": "1667:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 196,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1667:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1654:34:1"
            },
            "returnParameters": {
              "id": 199,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1703:0:1"
            },
            "scope": 252,
            "src": "1629:489:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 253,
        "src": "246:1874:1"
      }
    ],
    "src": "32:2088:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.6+commit.7338295f.Linux.g++"
  },
  "networks": {},
  "schemaVersion": "3.2.2",
  "updatedAt": "2021-02-13T09:40:16.718Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "getRoleMember(bytes32,uint256)": {
        "details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
      },
      "getRoleMemberCount(bytes32)": {
        "details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}